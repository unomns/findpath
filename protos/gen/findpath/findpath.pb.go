// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: findpath/findpath.proto

package findpathv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PathRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         int32                  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Grid          []int32                `protobuf:"varint,3,rep,packed,name=grid,proto3" json:"grid,omitempty"` // flat array
	Players       []*Player              `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathRequest) Reset() {
	*x = PathRequest{}
	mi := &file_findpath_findpath_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathRequest) ProtoMessage() {}

func (x *PathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_findpath_findpath_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathRequest.ProtoReflect.Descriptor instead.
func (*PathRequest) Descriptor() ([]byte, []int) {
	return file_findpath_findpath_proto_rawDescGZIP(), []int{0}
}

func (x *PathRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PathRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PathRequest) GetGrid() []int32 {
	if x != nil {
		return x.Grid
	}
	return nil
}

func (x *PathRequest) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type PathResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []*Path                `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathResponse) Reset() {
	*x = PathResponse{}
	mi := &file_findpath_findpath_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathResponse) ProtoMessage() {}

func (x *PathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_findpath_findpath_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathResponse.ProtoReflect.Descriptor instead.
func (*PathResponse) Descriptor() ([]byte, []int) {
	return file_findpath_findpath_proto_rawDescGZIP(), []int{1}
}

func (x *PathResponse) GetPath() []*Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *Node                  `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Target        *Node                  `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_findpath_findpath_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_findpath_findpath_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_findpath_findpath_proto_rawDescGZIP(), []int{2}
}

func (x *Player) GetStart() *Node {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Player) GetTarget() *Node {
	if x != nil {
		return x.Target
	}
	return nil
}

type Path struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Steps         []*Node                `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	Found         bool                   `protobuf:"varint,3,opt,name=found,proto3" json:"found,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Path) Reset() {
	*x = Path{}
	mi := &file_findpath_findpath_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Path) ProtoMessage() {}

func (x *Path) ProtoReflect() protoreflect.Message {
	mi := &file_findpath_findpath_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Path.ProtoReflect.Descriptor instead.
func (*Path) Descriptor() ([]byte, []int) {
	return file_findpath_findpath_proto_rawDescGZIP(), []int{3}
}

func (x *Path) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Path) GetSteps() []*Node {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Path) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Y             int32                  `protobuf:"varint,1,opt,name=y,proto3" json:"y,omitempty"`
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_findpath_findpath_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_findpath_findpath_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_findpath_findpath_proto_rawDescGZIP(), []int{4}
}

func (x *Node) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Node) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

var File_findpath_findpath_proto protoreflect.FileDescriptor

const file_findpath_findpath_proto_rawDesc = "" +
	"\n" +
	"\x17findpath/findpath.proto\x12\bfindpath\"{\n" +
	"\vPathRequest\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x12\x12\n" +
	"\x04grid\x18\x03 \x03(\x05R\x04grid\x12*\n" +
	"\aplayers\x18\x04 \x03(\v2\x10.findpath.PlayerR\aplayers\"2\n" +
	"\fPathResponse\x12\"\n" +
	"\x04path\x18\x01 \x03(\v2\x0e.findpath.PathR\x04path\"V\n" +
	"\x06Player\x12$\n" +
	"\x05start\x18\x01 \x01(\v2\x0e.findpath.NodeR\x05start\x12&\n" +
	"\x06target\x18\x02 \x01(\v2\x0e.findpath.NodeR\x06target\"_\n" +
	"\x04Path\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12$\n" +
	"\x05steps\x18\x02 \x03(\v2\x0e.findpath.NodeR\x05steps\x12\x14\n" +
	"\x05found\x18\x03 \x01(\bR\x05found\"\"\n" +
	"\x04Node\x12\f\n" +
	"\x01y\x18\x01 \x01(\x05R\x01y\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x2C\n" +
	"\n" +
	"PathFinder\x125\n" +
	"\x04Path\x12\x15.findpath.PathRequest\x1a\x16.findpath.PathResponseB\x1fZ\x1dunomns.findpath.v1;findpathv1b\x06proto3"

var (
	file_findpath_findpath_proto_rawDescOnce sync.Once
	file_findpath_findpath_proto_rawDescData []byte
)

func file_findpath_findpath_proto_rawDescGZIP() []byte {
	file_findpath_findpath_proto_rawDescOnce.Do(func() {
		file_findpath_findpath_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_findpath_findpath_proto_rawDesc), len(file_findpath_findpath_proto_rawDesc)))
	})
	return file_findpath_findpath_proto_rawDescData
}

var file_findpath_findpath_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_findpath_findpath_proto_goTypes = []any{
	(*PathRequest)(nil),  // 0: findpath.PathRequest
	(*PathResponse)(nil), // 1: findpath.PathResponse
	(*Player)(nil),       // 2: findpath.Player
	(*Path)(nil),         // 3: findpath.Path
	(*Node)(nil),         // 4: findpath.Node
}
var file_findpath_findpath_proto_depIdxs = []int32{
	2, // 0: findpath.PathRequest.players:type_name -> findpath.Player
	3, // 1: findpath.PathResponse.path:type_name -> findpath.Path
	4, // 2: findpath.Player.start:type_name -> findpath.Node
	4, // 3: findpath.Player.target:type_name -> findpath.Node
	4, // 4: findpath.Path.steps:type_name -> findpath.Node
	0, // 5: findpath.PathFinder.Path:input_type -> findpath.PathRequest
	1, // 6: findpath.PathFinder.Path:output_type -> findpath.PathResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_findpath_findpath_proto_init() }
func file_findpath_findpath_proto_init() {
	if File_findpath_findpath_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_findpath_findpath_proto_rawDesc), len(file_findpath_findpath_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_findpath_findpath_proto_goTypes,
		DependencyIndexes: file_findpath_findpath_proto_depIdxs,
		MessageInfos:      file_findpath_findpath_proto_msgTypes,
	}.Build()
	File_findpath_findpath_proto = out.File
	file_findpath_findpath_proto_goTypes = nil
	file_findpath_findpath_proto_depIdxs = nil
}
